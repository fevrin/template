---
name: 'Approval by label'

on:
  pull_request:
    types:
      - labeled
      - unlabeled

# from the example here:
# https://docs.github.com/en/actions/examples/using-scripts-to-test-your-code-on-a-runner#example-workflow
permissions:
  contents: read
  pull-requests: read
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  check-approve:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    if: |
      contains(github.event.pull_request.labels.*.name, 'override') ||
      contains(github.event.pull_request.labels.*.name, 'approve')
    steps:
      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE'
            })

  check-dismissal:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    if: |
      (!contains(github.event.pull_request.labels.*.name, 'override')) &&
      (!contains(github.event.pull_request.labels.*.name, 'approve'))
    steps:
      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |

            const result = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            console.log(`result = '${result}'`)
            console.log(`result = ${result}`)
            console.log('result = %s', result)

            reviews = result.data

            for (review of reviews) {
              console.log('review = %s', review)
              console.log('user = %s', review.user)
              console.log('review.state = %s', review.state)
              console.log('review.user.login = %s', review.user.login)

              if (review.state == 'APPROVED' && review.user.login == 'github-actions[bot]') {
                github.rest.issues.dismissReview({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.issue.number,
                  review_id: review.id,
                  message: 'Review dismissal reason: magic label removed'
                })
              }
            }
